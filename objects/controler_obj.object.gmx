<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>col_spr</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activeShape = undefined;
floatingShapeList = ds_list_create();
activeShapeCode = undefined;
activeShapeMode = 1;
gameSpeed = 20;
nextShape = undefined;
allBlock2dArray = undefined;

rightFlag = 0;      //右是否按下 0为否 1为是
leftFlag = 0;       //左是否按下 0为否 1为是
downFlag = 0;       //下是否按下 0为否 1为是
movingFlag = 0;     //是否正在移动 0为否 1为是
moveableFlag = 1;      //是否可以移动 0为否 1为是
xDirection = 0;
alarm[1] = 5;

scr_defGlobal();
var debug = instance_create(0,0,debug_obj);
ds_map_add(global.instanceMap,'debug',debug);
scr_initGame(id);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveableFlag = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(ds_list_size(floatingShapeList)&gt;0){
    for(var i = 0;i&lt;ds_list_size(floatingShapeList);i++){
            var floatingShape = floatingShapeList[|i];
            for(var j = 0;j&lt;array_length_1d(floatingShape);j++){
                var block = floatingShape[j];
                if(!is_undefined(block)){
                    scr_addDebugStr(string(scr_getIndexByPos(block.x))+"_"+string(scr_getIndexByPos(block.y)),10);
                }
            }
            
        }
 }
   var decideBlocks = ds_list_create();
   if(ds_list_size(floatingShapeList)&gt;0){
        for(var i = 0;i&lt;ds_list_size(floatingShapeList);i++){
            var collisionFlag = false;
            var floatingShape = floatingShapeList[|i];
            for(var j = 0;j&lt;array_length_1d(floatingShape);j++){
                var block = floatingShape[j];
                var nextStepY = block.y+30;
                collisionFlag = scr_checkPointCollision(block.x,nextStepY,id.allBlock2dArray);
                if(collisionFlag){
                    break;
                }
            }
            if(collisionFlag){
                for(var j = 0;j&lt;array_length_1d(floatingShape);j++){
                    ds_list_add(decideBlocks,floatingShape[j]);
                }
                ds_list_delete(floatingShapeList,i);
            }
        }
   }else{
        var collisionFlag = false;
        var length =  array_length_1d(activeShape);
        for(var i = 0;i&lt;length;i++){
            var block = activeShape[i];
            var nextStepY = block.y+30;
            collisionFlag = scr_checkPointCollision(block.x,nextStepY,id.allBlock2dArray);
            if(collisionFlag){
                break;
            }
        }
        if(collisionFlag){
            for(var j = 0;j&lt;array_length_1d(activeShape);j++){
                ds_list_add(decideBlocks,activeShape[j]);
            }
            activeShape = undefined;
        }
   }
   if(ds_list_size(decideBlocks)==0){
    if(ds_list_size(floatingShapeList)&gt;0){
    
        for(var i = 0;i&lt;ds_list_size(floatingShapeList);i++){
        var shape = floatingShapeList[|i];
            for(var j=0;j&lt;array_length_1d(shape);j++){
                var block = shape[j];
                block.y+=30;  
            }    
        }
    }else if(activeShape!=undefined){
        for(var i = 0;i&lt;array_length_1d(activeShape);i++){
                var block = activeShape[i];
                block.y+=30;  
        }   
    }
   }else{
      src_blockDecide(id,decideBlocks);
      scr_getFloatingBlock(id);
      if(ds_list_size(floatingShapeList)==0){
        activeShape = scr_getShape(nextShape,activeShapeMode,scr_getPosByIndex(5),scr_getPosByIndex(1));
        activeShapeCode = nextShape;
        activeShapeMode = 1;
        nextShape = irandom_range(1,7);
      }
   }
ds_list_destroy(decideBlocks);
alarm[0] = gameSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_clearDebugStr();
for(var i = 1;i&lt;21;i++){
    for(var j = 1;j&lt;11;j++){
        if(allBlock2dArray[i,j] == 0){
          scr_addDebugStr(string(allBlock2dArray[i,j]),10);
        }else{
          scr_addDebugStr(string(allBlock2dArray[i,j]),10);
        }
       
    }
}
if keyboard_check(ord('D'))
{
   rightFlag = 1;
}else{
   rightFlag = 0;
}
if keyboard_check(ord('A'))
{
   leftFlag = -1;
}else{
   leftFlag = 0;
}
if keyboard_check(ord('S'))
{
   downFlag = 1;
}else{
   downFlag = 0;
}
if(downFlag==1){
    gameSpeed = 2;
}else{
    gameSpeed = 20;
}
var movingFlagBefore = movingFlag;
xDirection = leftFlag+rightFlag;
if(xDirection!=0){
    movingFlag = 1;
}else if(xDirection==0){
    movingFlag = 0;
}
if(movingFlagBefore!=movingFlag){
    moveableFlag = 1;
}else{
    
}

if(movingFlag==1&amp;&amp;moveableFlag==1){
    scr_shapeMove(id,xDirection);
    moveableFlag = 0;
    alarm[1]=3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_changeShape(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
